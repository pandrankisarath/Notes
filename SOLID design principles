SOLID DESIGN PRINCIPLES:

The main aim of these SOLID design principles is to create code that is modular, adaptable, and easy to maintain.
These principles contribute to the overall goal of producing software that is resilient to changes and scalable as the project evolves.
These all are come under Object-Oriented Programming(OOD).
The SOLID principles are :-

1) Single Responsibility Principle (SRP)
A class should have only one reason to change, meaning it should have only one responsibility.

2) Open/Closed Principle (OCP):
Software entities (e.g., classes, modules) should be open for extension but closed for modification.

3) Liskov-Substitution Principle:
According to LSP, substituting the subclasses for the base class should work , and the expected behavior is maintained.

4) Interface Segregation Principle(ISP):
According to ISP it allows classes to implement only the interfaces that are relevant to their functionality.

5)Dependency Inversion principle (DIP):
DIP promotes a more flexible and adaptable design by inverting the direction of dependency in a system,
 allowing high-level and low-level modules to depend on abstractions rather than concrete details.